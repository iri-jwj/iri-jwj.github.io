<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on jwj - stop and drink cocktails</title>
    <link>https://iri-jwj.github.io/post/</link>
    <description>Recent content in Posts on jwj - stop and drink cocktails</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 08 Jun 2022 21:19:18 +0800</lastBuildDate><atom:link href="https://iri-jwj.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MessageQueue</title>
      <link>https://iri-jwj.github.io/post/messagequeue/</link>
      <pubDate>Wed, 08 Jun 2022 21:19:18 +0800</pubDate>
      
      <guid>https://iri-jwj.github.io/post/messagequeue/</guid>
      <description>Android 消息循环机制详解 Android 的消息循环机制中，最关键的类就是 Handler、MessageQueue、Looper、Message 这几个。本文中将从</description>
    </item>
    
    <item>
      <title>协程</title>
      <link>https://iri-jwj.github.io/post/%E5%8D%8F%E7%A8%8B/</link>
      <pubDate>Wed, 08 Jun 2022 21:12:42 +0800</pubDate>
      
      <guid>https://iri-jwj.github.io/post/%E5%8D%8F%E7%A8%8B/</guid>
      <description>瞄一眼Kotlin协程机制 kotlin的协程机制 coroutines: 协程机制在我的理解来是一种轻量级的同异步的线程机制,相比于原本的threads, 协程消耗的</description>
    </item>
    
    <item>
      <title>Exception</title>
      <link>https://iri-jwj.github.io/post/exception/</link>
      <pubDate>Wed, 08 Jun 2022 21:11:29 +0800</pubDate>
      
      <guid>https://iri-jwj.github.io/post/exception/</guid>
      <description>Exception 这篇笔记是在有道上写好了的，现在归档到博客上 Java中的Exception基本上是所有异常的父类，也就是基本上所有的异常都是直接、间接继承</description>
    </item>
    
    <item>
      <title>Activity.setContentView后发生的事情</title>
      <link>https://iri-jwj.github.io/post/activity.setcontentview%E5%90%8E%E5%8F%91%E7%94%9F%E7%9A%84%E4%BA%8B%E6%83%85/</link>
      <pubDate>Wed, 08 Jun 2022 20:46:05 +0800</pubDate>
      
      <guid>https://iri-jwj.github.io/post/activity.setcontentview%E5%90%8E%E5%8F%91%E7%94%9F%E7%9A%84%E4%BA%8B%E6%83%85/</guid>
      <description>activity.setContentView() 后发生的事情 有时候看到好些文章的标题都在说 activity 的setContentView()方法后会发生什么，今天（很早之前写下的）也刚好了解了一下全局</description>
    </item>
    
  </channel>
</rss>
